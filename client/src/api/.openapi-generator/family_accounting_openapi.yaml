openapi: 3.0.1
info:
  title: OpenAPI definition
  description: |
    家庭记账系统的 RESTful API，支持用户认证、人员管理、账户管理、交易记录和统计。
    支持银行、微信、支付宝等多种账号，每种账号下可有多张卡或子账户。
    角色权限：
    - 管理员：访问所有数据，管理用户、账号、子账户。
    - 普通用户：仅访问通过 user_sub_accounts 关联的子账户和自己的交易/统计。
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
tags:
  - name: SubAccounts
    description: the SubAccounts API
  - name: Auth
    description: the Auth API
  - name: TransactionTypes
    description: the TransactionTypes API
  - name: Transactions
    description: the Transactions API
  - name: Statistics
    description: the Statistics API
  - name: Accounts
    description: the Accounts API
  - name: Users
    description: the Users API
paths:
  '/users/{userId}':
    put:
      tags:
        - Users
        - users
      summary: 更新用户
      operationId: usersUpdate
      parameters:
        - name: userId
          in: path
          description: 用户 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          description: 用户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: 无效输入（用户名重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Users
        - users
      summary: 删除用户
      operationId: usersDelete
      parameters:
        - name: userId
          in: path
          description: 用户 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 用户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 用户存在关联数据（如交易记录），无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  '/transactions/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Transactions
        - transactions
      summary: 获取交易记录详情
      operationId: getTransaction
      parameters: []
      responses:
        '200':
          description: 交易记录详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易记录不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    put:
      tags:
        - Transactions
        - transactions
      summary: 更新交易记录
      operationId: updateTransaction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        '200':
          description: 交易记录已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
        '400':
          description: 无效输入（交易类型不存在或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易记录不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Transactions
        - transactions
      summary: 删除交易记录
      operationId: deleteTransaction
      parameters: []
      responses:
        '204':
          description: 交易记录已删除
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易记录不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  '/transaction-types/{typeId}':
    put:
      tags:
        - transaction-types
        - TransactionTypes
      summary: 更新交易类型
      operationId: transactionTypesUpdate
      parameters:
        - name: typeId
          in: path
          description: 交易类型 ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTypeRequest'
        required: true
      responses:
        '200':
          description: 交易类型已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易类型不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - transaction-types
        - TransactionTypes
      summary: 删除交易类型
      operationId: transactionTypesDelete
      parameters:
        - name: typeId
          in: path
          description: 交易类型 ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 交易类型已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易类型不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 交易类型存在关联交易记录，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  '/sub-accounts/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - sub-accounts
        - SubAccounts
      summary: 获取子账户详情
      operationId: getSubAccount
      parameters: []
      responses:
        '200':
          description: 子账户详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccountDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    put:
      tags:
        - sub-accounts
        - SubAccounts
      summary: 更新子账户
      operationId: subAccountsUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubAccountRequest'
        required: true
      responses:
        '200':
          description: 子账户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccount'
        '400':
          description: 无效输入（账户编号重复或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - sub-accounts
        - SubAccounts
      summary: 删除子账户
      operationId: subAccountsDelete
      parameters: []
      responses:
        '204':
          description: 子账户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 子账户存在关联交易，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  '/accounts/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - accounts
        - Accounts
      summary: 更新顶级账户
      operationId: accountsUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        '200':
          description: 账户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - accounts
        - Accounts
      summary: 删除顶级账户
      operationId: accountsDelete
      parameters: []
      responses:
        '204':
          description: 账户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 账户存在关联子账户，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - Users
        - users
      summary: 列出用户
      operationId: usersList
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Users
        - users
      summary: 创建用户
      operationId: usersCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '201':
          description: 用户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: 无效输入（用户名重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /transactions:
    get:
      tags:
        - Transactions
        - transactions
      summary: 列出交易记录
      operationId: transactionsList
      parameters:
        - name: page
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: int32
        - name: userId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: subAccountId
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 交易记录列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Transactions
        - transactions
      summary: 创建交易记录
      operationId: transactionsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        '201':
          description: 交易记录已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
        '400':
          description: 无效输入（交易类型不存在或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（普通用户尝试访问未关联的子账户）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /transaction-types:
    get:
      tags:
        - transaction-types
        - TransactionTypes
      summary: 列出交易类型
      operationId: transactionTypesList
      responses:
        '200':
          description: 交易类型列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    post:
      tags:
        - transaction-types
        - TransactionTypes
      summary: 创建交易类型
      operationId: transactionTypesCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTypeRequest'
        required: true
      responses:
        '201':
          description: 交易类型已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /sub-accounts:
    get:
      tags:
        - sub-accounts
        - SubAccounts
      summary: 列出子账户
      operationId: getSubAccounts
      responses:
        '200':
          description: 子账户列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccountDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    post:
      tags:
        - sub-accounts
        - SubAccounts
      summary: 创建子账户
      operationId: subAccountsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubAccountRequest'
        required: true
      responses:
        '201':
          description: 子账户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccount'
        '400':
          description: 无效输入（账户编号重复或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /login:
    post:
      tags:
        - auth
        - Auth
      summary: 用户登录
      operationId: authLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 无效的用户名或密码
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accounts:
    get:
      tags:
        - accounts
        - Accounts
      summary: 列出顶级账户
      operationId: accountsList
      responses:
        '200':
          description: 账户列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
    post:
      tags:
        - accounts
        - Accounts
      summary: 创建顶级账户
      operationId: accountsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        '201':
          description: 账户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
  /statistics:
    get:
      tags:
        - Statistics
      operationId: statisticsGet
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: accountId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: subAccountId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: period
          in: query
          required: true
          schema:
            type: string
        - name: year
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: week
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: day
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
  /statistics/statistics:
    get:
      tags:
        - Statistics
        - statistics
      summary: 获取收支统计
      operationId: statisticsGet_1
      parameters:
        - name: period
          in: query
          description: 统计周期（月度或年度）
          required: true
          schema:
            type: string
            enum:
              - monthly
              - annual
        - name: year
          in: query
          description: 年份
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          description: 按用户过滤（管理员专用，普通用户自动使用 JWT userId）
          required: false
          schema:
            type: integer
            format: int32
        - name: accountId
          in: query
          description: 按顶级账号过滤
          required: false
          schema:
            type: integer
            format: int32
        - name: subAccountId
          in: query
          description: 按子账户过滤
          required: false
          schema:
            type: integer
            format: int32
        - name: month
          in: query
          description: 月份（月度统计时需要）
          required: false
          schema:
            maximum: 12
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          description: 统计数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
        '400':
          description: 无效参数（参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: []
components:
  schemas:
    UserDTO:
      required:
        - role
        - userId
        - username
      type: object
      properties:
        userId:
          type: integer
          format: int32
        username:
          maxLength: 50
          minLength: 0
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - USER
    ApiError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - PERMISSION_DENIED
            - DUPLICATE_ACCOUNT
            - INVALID_TRANSACTION
            - DATA_NOT_FOUND
            - CONFLICT
            - INTERNAL_ERROR
            - INVALID_REQUEST
            - VALIDATION_FAILED
            - INVALID_CREDENTIALS
        message:
          type: string
    UserRequest:
      required:
        - password
        - role
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 100
          minLength: 0
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - USER
    TransactionDTO:
      required:
        - amount
        - subAccountId
        - time
        - transactionId
        - typeId
        - userId
      type: object
      properties:
        transactionId:
          type: integer
          format: int32
        time:
          type: string
          format: date-time
        typeId:
          type: integer
          format: int32
        isIncome:
          type: boolean
          description: 是否为收入（由typeId关联的transaction_types.is_income自动生成）
        subAccountId:
          type: integer
          format: int32
        amount:
          pattern: '^\d+(\.\d{2})?$'
          type: string
        userId:
          type: integer
          format: int32
        remarks:
          maxLength: 255
          minLength: 0
          type: string
    TransactionRequest:
      required:
        - amount
        - subAccountId
        - time
        - typeId
      type: object
      properties:
        time:
          type: string
          format: date-time
        typeId:
          type: integer
          format: int32
        subAccountId:
          type: integer
          format: int32
        amount:
          pattern: '^\d+(\.\d{2})?$'
          type: string
        remarks:
          maxLength: 255
          minLength: 0
          type: string
    TransactionTypeDTO:
      required:
        - isIncome
        - typeId
        - typeName
      type: object
      properties:
        typeId:
          type: integer
          format: int32
        typeName:
          maxLength: 50
          minLength: 0
          type: string
        isIncome:
          type: boolean
    TransactionTypeRequest:
      required:
        - isIncome
        - typeName
      type: object
      properties:
        typeName:
          maxLength: 50
          minLength: 0
          type: string
          description: 交易类型名称
        isIncome:
          type: boolean
          description: 是否为收入，TRUE 为收入，FALSE 为支出
    Account:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountName:
          type: string
        subAccounts:
          type: array
          items:
            $ref: '#/components/schemas/SubAccount'
    AccountType:
      type: object
      properties:
        typeId:
          type: integer
          format: int32
        typeName:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    SubAccount:
      type: object
      properties:
        subAccountId:
          type: integer
          format: int32
        account:
          $ref: '#/components/schemas/Account'
        accountName:
          type: string
        accountNumber:
          type: string
        cardType:
          type: string
          enum:
            - SAVINGS
            - DEBIT
            - CREDIT
            - VISA
            - MASTERCARD
            - WALLET
        balance:
          type: number
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: int32
        time:
          type: string
          format: date-time
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        subAccount:
          $ref: '#/components/schemas/SubAccount'
        amount:
          type: number
        user:
          $ref: '#/components/schemas/User'
        remarks:
          type: string
    TransactionType:
      type: object
      properties:
        typeId:
          type: integer
          format: int32
        typeName:
          type: string
        isIncome:
          type: boolean
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    SubAccountRequest:
      required:
        - accountId
        - accountName
        - accountNumber
        - balance
        - cardType
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        accountName:
          maxLength: 100
          minLength: 0
          type: string
        accountNumber:
          maxLength: 50
          minLength: 0
          type: string
        cardType:
          type: string
          enum:
            - SAVINGS
            - DEBIT
            - CREDIT
            - VISA
            - MASTERCARD
            - WALLET
        balance:
          pattern: '^\d+(\.\d{2})?$'
          type: string
    AccountRequest:
      required:
        - accountName
        - type
        - typeId
      type: object
      properties:
        accountName:
          maxLength: 100
          minLength: 0
          type: string
          description: 账户名称
        typeId:
          type: integer
          description: 账户类型 ID，对应 account_types.type_id
          format: int32
        type:
          type: string
          description: 账户类型
          enum:
            - BANK
            - WECHAT
            - ALIPAY
            - OTHER
    LoginResponse:
      required:
        - role
        - token
      type: object
      properties:
        token:
          type: string
          description: JWT 令牌
        role:
          type: string
          description: 用户角色
          enum:
            - ADMIN
            - USER
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 100
          minLength: 0
          type: string
    TransactionListResponse:
      required:
        - total
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
        total:
          type: integer
          format: int32
    SubAccountDTO:
      required:
        - accountId
        - accountName
        - accountNumber
        - balance
        - cardType
        - subAccountId
      type: object
      properties:
        subAccountId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        accountName:
          maxLength: 100
          minLength: 0
          type: string
        accountNumber:
          maxLength: 50
          minLength: 0
          type: string
        cardType:
          type: string
          enum:
            - SAVINGS
            - DEBIT
            - CREDIT
            - VISA
            - MASTERCARD
            - WALLET
        balance:
          pattern: '^\d+(\.\d{2})?$'
          type: string
    StatisticsResponse:
      required:
        - period
        - totalExpense
        - totalIncome
        - year
      type: object
      properties:
        period:
          type: string
          description: '统计周期：daily, weekly, monthly, yearly'
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        year:
          maximum: 2100
          minimum: 2000
          type: integer
          description: 年份
          format: int32
        month:
          maximum: 12
          minimum: 1
          type: integer
          description: 月份（月度统计时需要）
          format: int32
        week:
          maximum: 53
          minimum: 1
          type: integer
          description: 周次（周度统计时需要）
          format: int32
        day:
          maximum: 31
          minimum: 1
          type: integer
          description: 日期（日度统计时需要）
          format: int32
        incomeByType:
          type: array
          description: 按类型统计的收入
          items:
            $ref: '#/components/schemas/StatisticsResponseIncomeByType'
        expenseByType:
          type: array
          description: 按类型统计的支出
          items:
            $ref: '#/components/schemas/StatisticsResponseExpenseByType'
        totalIncome:
          pattern: '^\d+(\.\d{2})?$'
          type: string
          description: 总收入（固定 2 位小数）
        totalExpense:
          pattern: '^\d+(\.\d{2})?$'
          type: string
          description: 总支出（固定 2 位小数）
    StatisticsResponseExpenseByType:
      required:
        - amount
        - typeId
        - typeName
      type: object
      properties:
        typeId:
          type: integer
          description: 交易类型 ID
          format: int32
        typeName:
          maxLength: 50
          minLength: 0
          type: string
          description: 交易类型名称（如“日常消费”）
        amount:
          pattern: '^\d+(\.\d{2})?$'
          type: string
          description: 支出金额（固定 2 位小数）
      description: 按类型统计的支出
    StatisticsResponseIncomeByType:
      required:
        - amount
        - typeId
        - typeName
      type: object
      properties:
        typeId:
          type: integer
          description: 交易类型 ID
          format: int32
        typeName:
          maxLength: 50
          minLength: 0
          type: string
          description: 交易类型名称（如“工资”）
        amount:
          pattern: '^\d+(\.\d{2})?$'
          type: string
          description: 收入金额（固定 2 位小数）
      description: 按类型统计的收入
