openapi: 3.0.3
info:
  title: 家庭记账系统 API
  description: |
    家庭记账系统的 RESTful API，支持用户认证、人员管理、账户管理、交易记录和统计。
    支持银行、微信、支付宝等多种账号，每种账号下可有多张卡或子账户。
    角色权限：
    - 管理员：访问所有数据，管理用户、账号、子账户。
    - 普通用户：仅访问通过 user_sub_accounts 关联的子账户和自己的交易/统计。
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiError:
      type: object
      properties:
        code:
          type: string
          enum:
            - PERMISSION_DENIED
            - DUPLICATE_ACCOUNT
            - INVALID_TRANSACTION
            - DATA_NOT_FOUND
            - CONFLICT
            - INVALID_CREDENTIALS
        message:
          type: string

      required:
        - code
        - message
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 100
      required:
        - username
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT 令牌
        role:
          type: string
          enum: [ ADMIN, USER ]
          description: 用户角色
      required:
        - token
        - role
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
          maxLength: 50
        role:
          type: string
          enum: [ ADMIN, USER ]
      required:
        - id
        - username
        - role
    UserRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 100
        role:
          type: string
          enum: [ ADMIN, USER ]
      required:
        - username
        - password
        - role
    AccountDTO:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
          description: 顶级账户 ID
        name:
          type: string
          maxLength: 100
          description: 账户名称（如“我的银行账户”）
        typeId:
          type: integer
          description: 账户类型 ID，对应 account_types.type_id
        type:
          type: string
          enum: [ BANK, WECHAT, ALIPAY, OTHER ]
          description: 账户类型
      required:
        - accountId
        - name
        - typeId
        - type
    AccountRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          description: 账户名称
        type:
          type: string
          enum: [ BANK, WECHAT, ALIPAY, OTHER ]
          description: 账户类型
        typeId:
          type: integer
          description: 账户类型 ID，对应 account_types.type_id
      required:
        - name
        - type
        - typeId
    SubAccountDTO:
      type: object
      properties:
        subAccountId:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 100
        accountNumber:
          type: string
          maxLength: 50
        cardType:
          type: string
          enum: [ SAVINGS, DEBIT, CREDIT, WALLET ]
        balance:
          type: string
          pattern: ^\d+(\.\d{2})?$
      required:
        - subAccountId
        - accountId
        - name
        - accountNumber
        - cardType
        - balance
    SubAccountRequest:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 100
        accountNumber:
          type: string
          maxLength: 50
        cardType:
          type: string
          enum: [ SAVINGS, DEBIT, CREDIT, WALLET ]
        balance:
          type: string
          pattern: ^\d+(\.\d{2})?$
      required:
        - accountId
        - name
        - accountNumber
        - cardType
        - balance
    TransactionDTO:
      type: object
      properties:
        transactionId:
          type: integer
          format: int32
        time:
          type: string
          format: date-time
        typeId:
          type: integer
          format: int32
        isIncome:
          type: boolean
          description: 是否为收入（由typeId关联的transaction_types.is_income自动生成）
        subAccountId:
          type: integer
          format: int32
        amount:
          type: string
          pattern: ^\d+(\.\d{2})?$
        userId:
          type: integer
          format: int32
        remarks:
          type: string
          maxLength: 255
      required:
        - transactionId
        - time
        - typeId
        - subAccountId
        - amount
        - userId
    TransactionRequest:
      type: object
      properties:
        time:
          type: string
          format: date-time
        typeId:
          type: integer
          format: int32
        subAccountId:
          type: integer
          format: int32
        amount:
          type: string
          pattern: ^\d+(\.\d{2})?$
        remarks:
          type: string
          maxLength: 255
      required:
        - time
        - typeId
        - subAccountId
        - amount
    TransactionListResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
        total:
          type: integer
          format: int32
      required:
        - transactions
        - total
    TransactionTypeDTO:
      type: object
      properties:
        typeId:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 50
        isIncome:
          type: boolean
      required:
        - typeId
        - name
        - isIncome
    StatisticsResponse:
      type: object
      properties:
        period:
          type: string
          enum: [ monthly, annual ]
          description: 统计周期（月度或年度）
        year:
          type: integer
          format: int32
          description: 年份
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
          description: 月份（月度统计时需要）
        incomeByType:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsResponseIncomeByType'
          description: 按类型统计的收入
        expenseByType:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsResponseExpenseByType'
          description: 按类型统计的支出
        totalIncome:
          type: string
          pattern: ^\d+(\.\d{2})?$
          description: 总收入（固定 2 位小数）
        totalExpense:
          type: string
          pattern: ^\d+(\.\d{2})?$
          description: 总支出（固定 2 位小数）
      required:
        - period
        - year
        - totalIncome
        - totalExpense
    StatisticsResponseIncomeByType:
      type: object
      properties:
        typeId:
          type: integer
          format: int32
          description: 交易类型 ID
        typeName:
          type: string
          maxLength: 50
          description: 交易类型名称（如“工资”）
        amount:
          type: string
          pattern: ^\d+(\.\d{2})?$
          description: 收入金额（固定 2 位小数）
      required:
        - typeId
        - typeName
        - amount
    StatisticsResponseExpenseByType:
      type: object
      properties:
        typeId:
          type: integer
          format: int32
          description: 交易类型 ID
        typeName:
          type: string
          maxLength: 50
          description: 交易类型名称（如“日常消费”）
        amount:
          type: string
          pattern: ^\d+(\.\d{2})?$
          description: 支出金额（固定 2 位小数）
      required:
        - typeId
        - typeName
        - amount
paths:
  /login:
    post:
      tags:
        - auth
      summary: 用户登录
      description: 使用用户名和密码登录，返回 JWT 令牌。用户角色为 ADMIN 或 USER。
      operationId: authLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 无效的用户名或密码
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users:
    post:
      tags:
        - users
      summary: 创建用户
      description: 管理员创建新用户，指定用户名、密码和角色（ADMIN 或 USER）。
      operationId: usersCreate
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: 用户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: 无效输入（用户名重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - users
      summary: 列出用户
      description: 管理员获取用户列表。
      operationId: usersList
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/{userId}:
    put:
      tags:
        - users
      summary: 更新用户
      description: 管理员更新指定用户的信息（用户名、密码或角色）。
      operationId: usersUpdate
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 用户 ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: 用户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: 无效输入（用户名重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - users
      summary: 删除用户
      description: 管理员删除指定用户，需确保用户无关联数据（如交易记录）。
      operationId: usersDelete
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 用户 ID
      responses:
        '204':
          description: 用户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 用户存在关联数据（如交易记录），无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accounts:
    post:
      tags:
        - accounts
      summary: 创建顶级账户
      description: 管理员创建新的顶级账户（银行、微信、支付宝等）。
      operationId: accountsCreate
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: 账户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - accounts
      summary: 列出顶级账户
      description: 管理员获取顶级账户列表。
      operationId: accountsList
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 账户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accounts/{accountId}:
    put:
      tags:
        - accounts
      summary: 更新顶级账户
      description: 管理员更新指定账户的名称或类型。
      operationId: accountsUpdate
      security:
        - bearerAuth: [ ]
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 账户 ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200':
          description: 账户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - accounts
      summary: 删除顶级账户
      description: 管理员删除指定账户，需确保无关联子账户。
      operationId: accountsDelete
      security:
        - bearerAuth: [ ]
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 账户 ID
      responses:
        '204':
          description: 账户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 账户存在关联子账户，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /sub-accounts:
    post:
      tags:
        - sub-accounts
      summary: 创建子账户
      description: 管理员创建新的子账户。需提供唯一子账户编号和初始余额。
      operationId: subAccountsCreate
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubAccountRequest'
      responses:
        '201':
          description: 子账户已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccountDTO'
        '400':
          description: 无效输入（账户编号重复或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      operationId: getSubAccounts
      summary: 列出子账户
      tags:
        - sub-accounts
      responses:
        '200':
          description: 子账户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubAccountDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: [ ]
  /sub-accounts/{subAccountId}:
    put:
      tags:
        - sub-accounts
      summary: 更新子账户
      description: 管理员更新指定子账户的信息。
      operationId: subAccountsUpdate
      security:
        - bearerAuth: [ ]
      parameters:
        - name: subAccountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubAccountRequest'
      responses:
        '200':
          description: 子账户已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccountDTO'
        '400':
          description: 无效输入（账户编号重复或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - sub-accounts
      summary: 删除子账户
      description: 管理员删除指定子账户，需确保无关联交易。
      operationId: subAccountsDelete
      security:
        - bearerAuth: [ ]
      parameters:
        - name: subAccountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: 子账户已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 子账户存在关联交易，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      operationId: getSubAccount
      summary: 获取子账户详情
      tags:
        - sub-accounts
      parameters:
        - name: subAccountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 子账户详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubAccountDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 子账户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - bearerAuth: [ ]
  /transactions:
    post:
      tags:
        - transactions
      summary: 创建交易记录
      description: |
        创建新的交易记录。普通用户仅可为自己的子账户创建记录（匹配 user_sub_accounts）。
        管理员可为任何用户创建。isIncome 由 typeId 对应的 transaction_types.is_income 确定。
      operationId: transactionsCreate
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: 交易记录已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
        '400':
          description: 无效输入（交易类型不存在或参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（普通用户尝试访问未关联的子账户）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - transactions
      summary: 列出交易记录
      description: |
        获取交易记录列表。普通用户仅可查看自己的记录（匹配 JWT 中的 userId）。
        管理员可按 userId 过滤。
      operationId: transactionsList
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
            format: int32
        - name: subAccountId
          in: query
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: 交易记录列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /transaction-types:
    post:
      tags:
        - transaction-types
      summary: 创建交易类型
      description: 管理员创建新的交易类型（收入或支出）。
      operationId: transactionTypesCreate
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTypeDTO'
      responses:
        '201':
          description: 交易类型已创建
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - transaction-types
      summary: 列出交易类型
      description: 获取所有交易类型（收入/支出），用于新增交易时选择类型。
      operationId: transactionTypesList
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 交易类型列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionTypeDTO'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /transaction-types/{typeId}:
    put:
      tags:
        - transaction-types
      summary: 更新交易类型
      description: 管理员更新指定交易类型的名称或收入/支出属性。
      operationId: transactionTypesUpdate
      security:
        - bearerAuth: [ ]
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 交易类型 ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTypeDTO'
      responses:
        '200':
          description: 交易类型已更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionTypeDTO'
        '400':
          description: 无效输入（名称重复或参数错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易类型不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - transaction-types
      summary: 删除交易类型
      description: 管理员删除指定交易类型，需确保无关联交易记录。
      operationId: transactionTypesDelete
      security:
        - bearerAuth: [ ]
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: 交易类型 ID
      responses:
        '204':
          description: 交易类型已删除
        '403':
          description: 权限不足（非管理员）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: 交易类型不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: 交易类型存在关联交易记录，无法删除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /statistics:
    get:
      tags:
        - statistics
      summary: 获取收支统计
      description: |
        获取指定周期的收支统计，按交易类型分组。管理员可按 userId 过滤；普通用户仅可查看自己的统计。
      operationId: statisticsGet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
            format: int32
          description: 按用户过滤（管理员专用，普通用户自动使用 JWT userId）
        - name: accountId
          in: query
          schema:
            type: integer
            format: int32
          description: 按顶级账号过滤
        - name: subAccountId
          in: query
          schema:
            type: integer
            format: int32
          description: 按子账户过滤
        - name: period
          in: query
          schema:
            type: string
            enum: [ monthly, annual ]
          description: 统计周期（月度或年度）
          required: true
        - name: year
          in: query
          schema:
            type: integer
            format: int32
          description: 年份
          required: true
        - name: month
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 12
          description: 月份（月度统计时需要）
      responses:
        '200':
          description: 统计数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
        '400':
          description: 无效参数（参数格式错误）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '403':
          description: 权限不足（普通用户尝试访问未关联的数据）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'